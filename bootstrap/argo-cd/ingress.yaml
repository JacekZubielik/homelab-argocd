apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server
  labels:
    app.kubernetes.io/name: argocd-server
    # app: argocd-server
    # name: argocd-server

  annotations:
    argocd.argoproj.io/sync-wave: "4"
    cert-manager.io/cluster-issuer: route53-letsencrypt-production
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: "traefik-chain-basic-auth@kubernetescrd"
    traefik.ingress.kubernetes.io/router.tls.options: traefik-tls-ver13@kubernetescrd

    #argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    #argocd.argoproj.io/sync-wave: "0"

    # gethomepage.dev/enabled: "true"
    # gethomepage.dev/description: ArgoCD Dashboard
    # gethomepage.dev/group: Operations
    # gethomepage.dev/icon: argocd.png
    # gethomepage.dev/name: ArgoCD
    # gethomepage.dev/pod-selector: " "

spec:
  #ingressClassName: traefik-external
  rules:
  - host: argo.anotherlife.pl
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: argocd-server
            port: 
              number: 80
  # tls:
  # - hosts:
  #   - argo.infra.anotherlife.pl
  #   secretName: argo.infra.letsencrypt-production