---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: monitoring-grafana
  annotations:
    cert-manager.io/cluster-issuer: route53-letsencrypt-staging
    kubernetes.io/ingress.class: traefik-external
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "4"

spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      #match: Host(`grafana.<secret:private-domain>`)
      match: Host(`grafana.anotherlife.pl`)
      services:
        - kind: TraefikService #Service
          name: monitoring-grafana
          port: 80
      middlewares:
        - name: headers #traefik-dashboard-auth  #chain-traefik-dashboard
          namespace: traefik
  tls:
    #secretName: letsencrypt-staging
    options:
      name: tls-ver13
      namespace: traefik
    domains:
      - main: anotherlife.pl
        sans:
          - .anotherlife.pl
---
apiVersion: traefik.io/v1alpha1
kind: TraefikService
metadata:
  name: monitoring-grafana
spec:
  weighted:
    services:
      - name: monitoring-grafana
        port: 80
        weight: 1
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus
  labels:
    app.kubernetes.io/name: prometheus-operated
  annotations:
    cert-manager.io/cluster-issuer: route53-letsencrypt-staging
    kubernetes.io/ingress.class: traefik-external
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "4"

spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      #match: Host(`prometheus.<secret:private-domain>`)
      match: Host(`prometheus.anotherlife.pl`)
      services:
        - kind: TraefikService #Service
          name: prometheus-operated
          port: 9090
      middlewares:
        - name: headers #traefik-dashboard-auth  #chain-traefik-dashboard
          namespace: traefik
  tls:
    #secretName: letsencrypt-staging
    options:
      name: tls-ver13
      namespace: traefik
    domains:
      - main: anotherlife.pl
        sans:
          - .anotherlife.pl
---
apiVersion: traefik.io/v1alpha1
kind: TraefikService
metadata:
  name: prometheus-operated
spec:
  weighted:
    services:
      - name: prometheus-operated
        port: 9090
        weight: 1
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: alertmanager
  labels:
    app.kubernetes.io/name: alertmanager-operated
  annotations:
    cert-manager.io/cluster-issuer: route53-letsencrypt-staging
    kubernetes.io/ingress.class: traefik-external
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "4"

spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      #match: Host(`alertmanager.<secret:private-domain>`)
      match: Host(`alertmanager.anotherlife.pl`)
      services:
        - kind: TraefikService #Service
          name: alertmanager-operated
          port: 9093
      middlewares:
        - name: headers #traefik-dashboard-auth  #chain-traefik-dashboard
          namespace: traefik
  tls:
    #secretName: letsencrypt-staging
    options:
      name: tls-ver13
      namespace: traefik
    domains:
      - main: anotherlife.pl
        sans:
          - .anotherlife.pl
---
apiVersion: traefik.io/v1alpha1
kind: TraefikService
metadata:
  name: alertmanager-operated
spec:
  weighted:
    services:
      - name: alertmanager-operated
        port: 9093
        weight: 1




##################################

# ---
# apiVersion: traefik.io/v1alpha1
# kind: IngressRoute
# metadata:
#   name: kube-prometheus-stack
#   labels:
#     app.kubernetes.io/name: grafana
#   annotations:
#     cert-manager.io/cluster-issuer: route53-letsencrypt-staging
#     kubernetes.io/ingress.class: traefik-external
#     argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
#     argocd.argoproj.io/sync-wave: "4"

# spec:
#   entryPoints:
#     - websecure
#   routes:
#     - kind: Rule
#       match: Host(`grafana.anotherlife.pl`) # && (PathPrefix(`/`)
#       services:
#         - kind: Service
#           name: monitoring-grafana
#           port: 80
#           sticky:
#             cookie:
#               httpOnly: true
#               name: grafana
#               secure: true
#               sameSite: none
#       middlewares:
#         - name: headers #traefik-dashboard-auth  #chain-traefik-dashboard
#           namespace: traefik

##################################

    # - kind: Rule
    #   match: Host(`prometheus.anotherlife.pl`)
    #   services:
    #     - kind: Service
    #       name: prometheus-operated
    #       port: 9090 # 9090 http-web
    #       namespace: monitoring
    #   middlewares:
    #     - name: chain-traefik-dashboard
    #       namespace: traefik

##################################

    # - kind: Rule
    #   match: Host(`alertmanager.anotherlife.pl`)
    #   services:
    #     - kind: Service
    #       name: alertmanager-operated
    #       port: 9093 #http-web # 9093
    #       namespace: monitoring
    #   middlewares:
    #     - name: chain-traefik-dashboard
    #       namespace: traefik

##################################

  # tls:
  #   #secretName: letsencrypt-production
  #   options:
  #     name: tls-ver13
  #     namespace: traefik
  #   domains:
  #     - main: anotherlife.pl
  #       sans:
  #         - .anotherlife.pl