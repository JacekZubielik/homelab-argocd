apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations: 
    kubernetes.io/ingress.class: traefik-internal 
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`grafana.example.com`)
      kind: Rule
      services:
        - name: grafana
          port: 80
          sticky:
            cookie:
              httpOnly: true
              name: grafana
              secure: true
              sameSite: none
  tls:
    secretName: your-tls-secret




apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
    app: grafana
    name: grafana

  annotations:
    cert-manager.io/cluster-issuer: route53-letsencrypt-production
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    #traefik.ingress.kubernetes.io/router.middlewares: traefik-chain-basic-auth@kubernetescrd
    traefik.ingress.kubernetes.io/router.middlewares: traefik-headers@kubernetescrd
    traefik.ingress.kubernetes.io/router.tls.options: traefik-tls-ver12@kubernetescrd
    #traefik.ingress.kubernetes.io/ingressEndpoint.hostname: {{ .Values.ingress.host }}

    #argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    #argocd.argoproj.io/sync-wave: "4"

spec:
  #ingressClassName: traefik-external
  rules:
    - host: grafana.anotherlife.pl
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 9093
  # tls:
  # - hosts:
  #   - grafana.anotherlife.pl
  #   #secretName: hello.dev.letsencrypt-production
  #   secretName: letsencrypt-production
