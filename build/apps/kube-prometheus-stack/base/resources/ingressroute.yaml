---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: monitoring #monitoring #kube-prometheus-stack
  #namespace: ${kubernetes_namespace.monitoring-ns.metadata.0.name}
  # labels:
  #   #app.kubernetes.io/name: monitoring-grafana #kube-prometheus-stack
  #   app.kubernetes.io/instance: dev-kube-prometheus-stack
  #   #app.kubernetes.io/instance: monitoring
  #   app.kubernetes.io/name: grafana

  annotations:
    cert-manager.io/cluster-issuer: route53-letsencrypt-staging
    kubernetes.io/ingress.class: traefik-external
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "4"

spec:
  entryPoints:
    - web #websecure
  routes:
    - kind: Rule
      match: Host(`grafana.anotherlife.pl`) && (PathPrefix(`/`)
      services:
        - kind: Service
          name: kube-prometheus-stack-grafana
          port: 80
          namespace: monitoring
    #   middlewares:
    #     - name: headers #traefik-dashboard-auth  #chain-traefik-dashboard
    #       namespace: traefik

    # - kind: Rule
    #   match: Host(`prometheus.anotherlife.pl`)
    #   services:
    #     - kind: Service
    #       name: prometheus-operated
    #       port: 9090 # 9090 http-web
    #       namespace: monitoring
    # #   middlewares:
    # #     - name: headers #traefik-dashboard-auth  #chain-traefik-dashboard
    # #       namespace: traefik

    # - kind: Rule
    #   match: Host(`alertmanager.anotherlife.pl`)
    #   services:
    #     - kind: Service
    #       name: alertmanager-operated
    #       port: 9094 #http-web # 9093
    #       namespace: monitoring
    # #   middlewares:
    # #     - name: headers #traefik-dashboard-auth  #chain-traefik-dashboard
    # #       namespace: traefik

  tls:
    #secretName: letsencrypt-production
    options:
      name: tls-ver13
      #namespace: traefik
    domains:
      - main: anotherlife.pl
        sans:
          - .anotherlife.pl
