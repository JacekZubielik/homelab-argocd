# If this option is set to false a StateFulset instead of a Deployment is used
useDeploy: false

# upgrade strategy type (e.g. Recreate or RollingUpdate)
strategyType: Recreate

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

# podAnnotations: {}
# podLabels: {}

# podEnv:
#   - name: "UPTIME_KUMA_PORT"
#     value: "3001"

podSecurityContext: {}
  # fsGroup: 2000
# dnsPolicy: ""
# dnsConfig: {}
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
# dnsPolicy: ""
# dnsConfig: {}

service:
  type: ClusterIP
  port: 3001
  nodePort: {}
  annotations: {}

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  enabled: true
  timeoutSeconds: 2
  initialDelaySeconds: 15

readinessProbe:
  enabled: true
  initialDelaySeconds: 5

nodeSelector:
  kubernetes.io/hostname: dev-k3s-master-0

# tolerations: []

# affinity: {}

persistence:
  enabled: true
  # storageClass: "-"
  ##
  ## If you want to reuse an existing claim, you can pass the name of the PVC using
  ## the existingClaim variable
  # existingClaim: your-claim
  ##
  ## If you want to use a volume on the host machine instead of a PVC:
  hostPath: /mnt/volume-0/apps/uptime-kuma
  # accessMode: ReadWriteOnce
  # size: 1Gi

serviceMonitor:
  enabled: false
  interval: 60s
  scrapeTimeout: 10s
  scheme: ~
  tlsConfig: {}
  relabelings: []
  metricRelabelings: []
  selector: {}
  namespace: ~
  additionalLabels: {}
  annotations: {}

# dnsPolicy: ""
# dnsConfig: {}

ingress:
  enabled: false
  # className: ""
  extraLabels: {}
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_cache_bypass $http_upgrade;
      }
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific

  tls:
    []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local